{"ast":null,"code":"var _jsxFileName = \"/home/cherry-dev-04/user-ui/src/ReduxContainers/MyRequest.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { userActions } from \"../ApiCall/rootApi\";\nimport { withRouter } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nfunction MyRequest(props) {\n  const query = queryString.parse(props.location.search); // const value = useSelector(state => state);\n  // console.log(value);\n\n  const [page, setPage] = useState(parseInt(query.page) || 1);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const apiCall = () => {\n      dispatch(userActions.PriorityApi(), dispatch(userActions.DashBoardApi(), dispatch(userActions.TicketListApi(props.location.search))));\n    };\n\n    apiCall();\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(userActions.TicketListApi(props.location.search));\n  }, [props.location.search, dispatch]);\n  let params = new URLSearchParams(props.location.search);\n\n  const handleIncrement = () => {\n    setPage(page + 1);\n    params.set(\"page\", page + 1);\n    props.history.push({\n      pathname: \"/request\",\n      search: params.toString()\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"My Request\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleIncrement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Increment\")));\n}\n\nexport default withRouter(MyRequest);","map":{"version":3,"sources":["/home/cherry-dev-04/user-ui/src/ReduxContainers/MyRequest.js"],"names":["React","Fragment","useEffect","useState","useDispatch","userActions","withRouter","queryString","MyRequest","props","query","parse","location","search","page","setPage","parseInt","dispatch","apiCall","PriorityApi","DashBoardApi","TicketListApi","params","URLSearchParams","handleIncrement","set","history","push","pathname","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AACA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAMC,KAAK,GAAGH,WAAW,CAACI,KAAZ,CAAkBF,KAAK,CAACG,QAAN,CAAeC,MAAjC,CAAd,CADwB,CAExB;AACA;;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACa,QAAQ,CAACN,KAAK,CAACI,IAAP,CAAR,IAAwB,CAAzB,CAAhC;AACA,QAAMG,QAAQ,GAAGb,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,OAAO,GAAG,MAAM;AACpBD,MAAAA,QAAQ,CACNZ,WAAW,CAACc,WAAZ,EADM,EAENF,QAAQ,CACNZ,WAAW,CAACe,YAAZ,EADM,EAENH,QAAQ,CAACZ,WAAW,CAACgB,aAAZ,CAA0BZ,KAAK,CAACG,QAAN,CAAeC,MAAzC,CAAD,CAFF,CAFF,CAAR;AAOD,KARD;;AASAK,IAAAA,OAAO;AACR,GAXQ,EAWN,CAACD,QAAD,CAXM,CAAT;AAYAf,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACZ,WAAW,CAACgB,aAAZ,CAA0BZ,KAAK,CAACG,QAAN,CAAeC,MAAzC,CAAD,CAAR;AACD,GAFQ,EAEN,CAACJ,KAAK,CAACG,QAAN,CAAeC,MAAhB,EAAwBI,QAAxB,CAFM,CAAT;AAGA,MAAIK,MAAM,GAAG,IAAIC,eAAJ,CAAoBd,KAAK,CAACG,QAAN,CAAeC,MAAnC,CAAb;;AAEA,QAAMW,eAAe,GAAG,MAAM;AAC5BT,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACAQ,IAAAA,MAAM,CAACG,GAAP,CAAW,MAAX,EAAmBX,IAAI,GAAG,CAA1B;AACAL,IAAAA,KAAK,CAACiB,OAAN,CAAcC,IAAd,CAAmB;AACjBC,MAAAA,QAAQ,EAAE,UADO;AAEjBf,MAAAA,MAAM,EAAES,MAAM,CAACO,QAAP;AAFS,KAAnB;AAID,GAPD;;AAQA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEE;AAAQ,IAAA,OAAO,EAAEL,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CADF,CADF;AAQD;;AACD,eAAelB,UAAU,CAACE,SAAD,CAAzB","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { userActions } from \"../ApiCall/rootApi\";\nimport { withRouter } from \"react-router-dom\";\nimport queryString from \"query-string\";\nfunction MyRequest(props) {\n  const query = queryString.parse(props.location.search);\n  // const value = useSelector(state => state);\n  // console.log(value);\n  const [page, setPage] = useState(parseInt(query.page) || 1);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const apiCall = () => {\n      dispatch(\n        userActions.PriorityApi(),\n        dispatch(\n          userActions.DashBoardApi(),\n          dispatch(userActions.TicketListApi(props.location.search))\n        )\n      );\n    };\n    apiCall();\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(userActions.TicketListApi(props.location.search));\n  }, [props.location.search, dispatch]);\n  let params = new URLSearchParams(props.location.search);\n\n  const handleIncrement = () => {\n    setPage(page + 1);\n    params.set(\"page\", page + 1);\n    props.history.push({\n      pathname: \"/request\",\n      search: params.toString()\n    });\n  };\n  return (\n    <Fragment>\n      <div className=\"main\">\n        My Request\n        <button onClick={handleIncrement}>Increment</button>\n      </div>\n    </Fragment>\n  );\n}\nexport default withRouter(MyRequest);\n"]},"metadata":{},"sourceType":"module"}