{"ast":null,"code":"import { Key } from \"../FroalaEditorKey\";\nimport { BASE_PATH, SERVICE_PATH } from \"../../ApiBasePath/ApiBasePath\";\nexport const OverviewConfig = {\n  heightMin: 150,\n  heightMax: 320,\n  placeholderText: \"\",\n  charCounterCount: false,\n  attribution: false,\n  autofocus: false,\n  key: Key,\n  required: true,\n  toolbarButtons: {\n    moreText: {\n      buttons: [\"bold\", \"italic\", \"underline\", \"strikeThrough\", \"subscript\", \"superscript\", \"fontFamily\", \"fontSize\", \"textColor\", \"inlineClass\", \"inlineStyle\", \"clearFormatting\"],\n      align: \"left\",\n      buttonsVisible: 2\n    },\n    moreParagraph: {\n      buttons: [\"alignLeft\", \"alignCenter\", \"formatOLSimple\", \"alignRight\", \"alignJustify\", \"formatOL\", \"formatUL\", \"paragraphFormat\", \"paragraphStyle\", \"lineHeight\", \"outdent\", \"indent\", \"quote\"],\n      align: \"left\",\n      buttonsVisible: 3\n    },\n    moreRich: {\n      buttons: [\"insertLink\", \"insertImage\", \"insertTable\", \"insertHR\"],\n      align: \"left\",\n      buttonsVisible: 2\n    }\n  },\n  imageUploadURL: `${BASE_PATH}${SERVICE_PATH}/static/upload/?v2=true`,\n  imageUploadMethod: \"POST\",\n  imageAllowedTypes: [\"jpeg\", \"jpg\", \"png\"],\n  events: {\n    \"image.beforeUpload\": function (images) {// Return false if you want to stop the image upload.\n    },\n    \"image.uploaded\": function (response) {\n      response = JSON.parse(response);\n      var img_url = response.uploadUrl;\n      this.image.insert(img_url, true, null, this.image.get(), {\n        link: img_url\n      });\n      return false; // Image was uploaded to the server.\n    },\n    \"image.inserted\": function (img, response) {// Image was inserted in the editor.\n    },\n    \"image.replaced\": function (img, response) {\n      response = JSON.parse(response);\n      var img_url = response.uploadUrl;\n      this.image.insert(img_url, true, null, this.image.get(), {\n        link: img_url\n      });\n      return false;\n    }\n  }\n};","map":{"version":3,"sources":["/home/cherry-dev-04/user-ui/src/FroalaEditor/Config/OverviewConfig.js"],"names":["Key","BASE_PATH","SERVICE_PATH","OverviewConfig","heightMin","heightMax","placeholderText","charCounterCount","attribution","autofocus","key","required","toolbarButtons","moreText","buttons","align","buttonsVisible","moreParagraph","moreRich","imageUploadURL","imageUploadMethod","imageAllowedTypes","events","images","response","JSON","parse","img_url","uploadUrl","image","insert","get","link","img"],"mappings":"AAAA,SAASA,GAAT,QAAoB,oBAApB;AACA,SACEC,SADF,EACYC,YADZ,QAEO,+BAFP;AAGA,OAAO,MAAMC,cAAc,GAAG;AAC5BC,EAAAA,SAAS,EAAE,GADiB;AAE5BC,EAAAA,SAAS,EAAE,GAFiB;AAG5BC,EAAAA,eAAe,EAAE,EAHW;AAI5BC,EAAAA,gBAAgB,EAAE,KAJU;AAK5BC,EAAAA,WAAW,EAAE,KALe;AAM5BC,EAAAA,SAAS,EAAE,KANiB;AAO5BC,EAAAA,GAAG,EAAEV,GAPuB;AAQ5BW,EAAAA,QAAQ,EAAE,IARkB;AAS5BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,OAAO,EAAE,CACP,MADO,EAEP,QAFO,EAGP,WAHO,EAIP,eAJO,EAKP,WALO,EAMP,aANO,EAOP,YAPO,EAQP,UARO,EASP,WATO,EAUP,aAVO,EAWP,aAXO,EAYP,iBAZO,CADD;AAeRC,MAAAA,KAAK,EAAE,MAfC;AAgBRC,MAAAA,cAAc,EAAE;AAhBR,KADI;AAmBdC,IAAAA,aAAa,EAAE;AACbH,MAAAA,OAAO,EAAE,CACP,WADO,EAEP,aAFO,EAGP,gBAHO,EAIP,YAJO,EAKP,cALO,EAMP,UANO,EAOP,UAPO,EAQP,iBARO,EASP,gBATO,EAUP,YAVO,EAWP,SAXO,EAYP,QAZO,EAaP,OAbO,CADI;AAgBbC,MAAAA,KAAK,EAAE,MAhBM;AAiBbC,MAAAA,cAAc,EAAE;AAjBH,KAnBD;AAsCdE,IAAAA,QAAQ,EAAE;AACRJ,MAAAA,OAAO,EAAE,CAAC,YAAD,EAAe,aAAf,EAA8B,aAA9B,EAA6C,UAA7C,CADD;AAERC,MAAAA,KAAK,EAAE,MAFC;AAGRC,MAAAA,cAAc,EAAE;AAHR;AAtCI,GATY;AAqD5BG,EAAAA,cAAc,EAAG,GAAElB,SAAU,GAAEC,YAAa,yBArDhB;AAsD5BkB,EAAAA,iBAAiB,EAAE,MAtDS;AAuD5BC,EAAAA,iBAAiB,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,CAvDS;AAwD5BC,EAAAA,MAAM,EAAE;AACN,0BAAsB,UAASC,MAAT,EAAiB,CACrC;AACD,KAHK;AAIN,sBAAkB,UAASC,QAAT,EAAmB;AACnCA,MAAAA,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWF,QAAX,CAAX;AACA,UAAIG,OAAO,GAAGH,QAAQ,CAACI,SAAvB;AACA,WAAKC,KAAL,CAAWC,MAAX,CAAkBH,OAAlB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,KAAKE,KAAL,CAAWE,GAAX,EAAvC,EAAyD;AACvDC,QAAAA,IAAI,EAAEL;AADiD,OAAzD;AAGA,aAAO,KAAP,CANmC,CAOnC;AACD,KAZK;AAaN,sBAAkB,UAASM,GAAT,EAAcT,QAAd,EAAwB,CACxC;AACD,KAfK;AAgBN,sBAAkB,UAASS,GAAT,EAAcT,QAAd,EAAwB;AACxCA,MAAAA,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWF,QAAX,CAAX;AACA,UAAIG,OAAO,GAAGH,QAAQ,CAACI,SAAvB;AACA,WAAKC,KAAL,CAAWC,MAAX,CAAkBH,OAAlB,EAA2B,IAA3B,EAAiC,IAAjC,EAAuC,KAAKE,KAAL,CAAWE,GAAX,EAAvC,EAAyD;AACvDC,QAAAA,IAAI,EAAEL;AADiD,OAAzD;AAGA,aAAO,KAAP;AACD;AAvBK;AAxDoB,CAAvB","sourcesContent":["import { Key } from \"../FroalaEditorKey\";\nimport {\n  BASE_PATH,SERVICE_PATH\n} from \"../../ApiBasePath/ApiBasePath\";\nexport const OverviewConfig = {\n  heightMin: 150,\n  heightMax: 320,\n  placeholderText: \"\",\n  charCounterCount: false,\n  attribution: false,\n  autofocus: false,\n  key: Key,\n  required: true,\n  toolbarButtons: {\n    moreText: {\n      buttons: [\n        \"bold\",\n        \"italic\",\n        \"underline\",\n        \"strikeThrough\",\n        \"subscript\",\n        \"superscript\",\n        \"fontFamily\",\n        \"fontSize\",\n        \"textColor\",\n        \"inlineClass\",\n        \"inlineStyle\",\n        \"clearFormatting\"\n      ],\n      align: \"left\",\n      buttonsVisible: 2\n    },\n    moreParagraph: {\n      buttons: [\n        \"alignLeft\",\n        \"alignCenter\",\n        \"formatOLSimple\",\n        \"alignRight\",\n        \"alignJustify\",\n        \"formatOL\",\n        \"formatUL\",\n        \"paragraphFormat\",\n        \"paragraphStyle\",\n        \"lineHeight\",\n        \"outdent\",\n        \"indent\",\n        \"quote\"\n      ],\n      align: \"left\",\n      buttonsVisible: 3\n    },\n    moreRich: {\n      buttons: [\"insertLink\", \"insertImage\", \"insertTable\", \"insertHR\"],\n      align: \"left\",\n      buttonsVisible: 2\n    }\n  },\n  imageUploadURL: `${BASE_PATH}${SERVICE_PATH}/static/upload/?v2=true`,\n  imageUploadMethod: \"POST\",\n  imageAllowedTypes: [\"jpeg\", \"jpg\", \"png\"],\n  events: {\n    \"image.beforeUpload\": function(images) {\n      // Return false if you want to stop the image upload.\n    },\n    \"image.uploaded\": function(response) {\n      response = JSON.parse(response);\n      var img_url = response.uploadUrl;\n      this.image.insert(img_url, true, null, this.image.get(), {\n        link: img_url\n      });\n      return false;\n      // Image was uploaded to the server.\n    },\n    \"image.inserted\": function(img, response) {\n      // Image was inserted in the editor.\n    },\n    \"image.replaced\": function(img, response) {\n      response = JSON.parse(response);\n      var img_url = response.uploadUrl;\n      this.image.insert(img_url, true, null, this.image.get(), {\n        link: img_url\n      });\n      return false;\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}