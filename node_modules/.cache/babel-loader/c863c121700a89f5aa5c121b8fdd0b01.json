{"ast":null,"code":"var _jsxFileName = \"/home/cherry-dev-04/user-ui/src/ReduxContainers/KnowledgeBase.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userActions } from \"../ApiCall/rootApi\";\nimport { getKnowledgeBase } from \"../ApiCall/KnowledgeBaseApi\";\n\nfunction KnowledgeBase(props) {\n  const dispatch = useDispatch();\n  const kbData = useSelector(state => state.KnowledgeBaseReducer.KnowledgeBaseData); // const articlesData = useSelector(\n  //   state => state.KnowledgeBaseArticleReducer.KnowledgeBaseArticleData\n  // );\n  // const articlesDataLoading = useSelector(\n  //   state => state.KnowledgeBaseReducer.loading\n  // );\n  // const topicsData = useSelector(\n  //   state => state.KnowledgeBaseTopicsReducer.KnowledgeBaseTopicsData\n  // );\n  //const topicsDataLoading = useSelector(state => state.KnowledgeBaseTopicsReducer.loading);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"X-Auth-Token\");\n\n    const tokenApiCalls = () => {\n      dispatch(userActions.KnowledgeBaseArticleApi(422)); // dispatch(userActions.KnowledgeBaseTopicsApi(81));\n      // dispatch(userActions.KnowledgeBaseApi());\n    };\n\n    token && tokenApiCalls();\n    return function cleanUp() {\n      dispatch(getKnowledgeBase());\n    };\n  }, [dispatch]);\n  console.log(kbData);\n  useEffect(() => {\n    const kbArray = [{\n      id: 82\n    }, {\n      id: 81\n    }];\n    kbData !== undefined && kbArray.map(data => setTimeout(() => {\n      dispatch(userActions.KnowledgeBaseTopicsApi(data.id, kbArray.length));\n    }, 2000));\n  }, [kbData]);\n  console.log(kbData);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Knowledge Base\"));\n}\n\nexport default withRouter(KnowledgeBase);","map":{"version":3,"sources":["/home/cherry-dev-04/user-ui/src/ReduxContainers/KnowledgeBase.js"],"names":["React","Fragment","useEffect","withRouter","useDispatch","useSelector","userActions","getKnowledgeBase","KnowledgeBase","props","dispatch","kbData","state","KnowledgeBaseReducer","KnowledgeBaseData","token","localStorage","getItem","tokenApiCalls","KnowledgeBaseArticleApi","cleanUp","console","log","kbArray","id","undefined","map","data","setTimeout","KnowledgeBaseTopicsApi","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,gBAAT,QAAiC,6BAAjC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,MAAM,GAAGN,WAAW,CACxBO,KAAK,IAAIA,KAAK,CAACC,oBAAN,CAA2BC,iBADZ,CAA1B,CAF4B,CAK5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;;AACA,UAAMC,aAAa,GAAG,MAAM;AAC1BR,MAAAA,QAAQ,CAACJ,WAAW,CAACa,uBAAZ,CAAoC,GAApC,CAAD,CAAR,CAD0B,CAE1B;AACA;AACD,KAJD;;AAKAJ,IAAAA,KAAK,IAAIG,aAAa,EAAtB;AACA,WAAO,SAASE,OAAT,GAAmB;AACxBV,MAAAA,QAAQ,CAACH,gBAAgB,EAAjB,CAAR;AACD,KAFD;AAGD,GAXQ,EAWN,CAACG,QAAD,CAXM,CAAT;AAYAW,EAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACAT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMqB,OAAO,GAAG,CAAC;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAD,EAAa;AAAEA,MAAAA,EAAE,EAAE;AAAN,KAAb,CAAhB;AAEAb,IAAAA,MAAM,KAAKc,SAAX,IACEF,OAAO,CAACG,GAAR,CAAYC,IAAI,IACdC,UAAU,CAAC,MAAM;AACflB,MAAAA,QAAQ,CAACJ,WAAW,CAACuB,sBAAZ,CAAmCF,IAAI,CAACH,EAAxC,EAA4CD,OAAO,CAACO,MAApD,CAAD,CAAR;AACD,KAFS,EAEP,IAFO,CADZ,CADF;AAMD,GATQ,EASN,CAACnB,MAAD,CATM,CAAT;AAUAU,EAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AAEA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF;AAKD;;AACD,eAAeR,UAAU,CAACK,aAAD,CAAzB","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userActions } from \"../ApiCall/rootApi\";\nimport { getKnowledgeBase } from \"../ApiCall/KnowledgeBaseApi\";\n\nfunction KnowledgeBase(props) {\n  const dispatch = useDispatch();\n  const kbData = useSelector(\n    state => state.KnowledgeBaseReducer.KnowledgeBaseData\n  );\n  // const articlesData = useSelector(\n  //   state => state.KnowledgeBaseArticleReducer.KnowledgeBaseArticleData\n  // );\n  // const articlesDataLoading = useSelector(\n  //   state => state.KnowledgeBaseReducer.loading\n  // );\n  // const topicsData = useSelector(\n  //   state => state.KnowledgeBaseTopicsReducer.KnowledgeBaseTopicsData\n  // );\n  //const topicsDataLoading = useSelector(state => state.KnowledgeBaseTopicsReducer.loading);\n  useEffect(() => {\n    const token = localStorage.getItem(\"X-Auth-Token\");\n    const tokenApiCalls = () => {\n      dispatch(userActions.KnowledgeBaseArticleApi(422));\n      // dispatch(userActions.KnowledgeBaseTopicsApi(81));\n      // dispatch(userActions.KnowledgeBaseApi());\n    };\n    token && tokenApiCalls();\n    return function cleanUp() {\n      dispatch(getKnowledgeBase());\n    };\n  }, [dispatch]);\n  console.log(kbData);\n  useEffect(() => {\n    const kbArray = [{ id: 82 }, { id: 81 }];\n\n    kbData !== undefined &&\n      kbArray.map(data =>\n        setTimeout(() => {\n          dispatch(userActions.KnowledgeBaseTopicsApi(data.id, kbArray.length));\n        }, 2000)\n      );\n  }, [kbData]);\n  console.log(kbData);\n\n  return (\n    <Fragment>\n      <div className=\"main\">Knowledge Base</div>\n    </Fragment>\n  );\n}\nexport default withRouter(KnowledgeBase);\n"]},"metadata":{},"sourceType":"module"}