{"ast":null,"code":"import * as actionTypes from \"../actions/TicketListActions\";\nimport { BASE_PATH, SERVICE_PATH } from \"../ApiBasePath/ApiBasePath\";\nimport axios from \"axios\";\nimport { Pagination } from \"../helpers/Pagination\";\nimport queryString from \"query-string\";\nexport const getTicketList = TicketList => {\n  return {\n    type: actionTypes.GET_TICKET_LIST\n  };\n};\nexport const setTicketList = TicketList => {\n  return {\n    type: actionTypes.SET_TICKET_LIST,\n    TicketList: TicketList\n  };\n};\nexport const TicketListFail = error => {\n  return {\n    type: actionTypes.TICKET_LIST_FAIL,\n    error: error\n  };\n};\nexport const TicketListApi = location => {\n  const Page = Pagination(location);\n  const query = queryString.parse(location);\n  const from = Page.from;\n  const to = Page.to;\n  const token = localStorage.getItem(\"X-Auth-Token\");\n  const url = `${BASE_PATH}${SERVICE_PATH}/requests/1?state=${query.state}&from=${from || 0}&to=${to || 10}&originated=false&order=desc&sortBy=UPDATE-TIME`;\n  return dispacth => {\n    const apiToken = token !== null && {\n      \"X-Auth-Token\": token\n    };\n    dispacth(getTicketList());\n    axios.get(url, {\n      headers: apiToken\n    }).then(res => {\n      dispacth(setTicketList(res.data));\n    }).catch(error => {\n      console.log(error);\n      error.response !== undefined && dispacth(TicketListFail(error.response.data));\n    });\n  };\n};\nexport const TicketListRefreshApi = location => {\n  const Page = Pagination(location);\n  const query = queryString.parse(location);\n  const from = Page.from;\n  const to = Page.to;\n  const token = localStorage.getItem(\"X-Auth-Token\");\n  const url = `${BASE_PATH}${SERVICE_PATH}/requests/1?state=${query.state}&from=${from || 0}&to=${to || 10}&originated=false&order=desc&sortBy=UPDATE-TIME`;\n  return dispacth => {\n    const apiToken = token !== null && {\n      \"X-Auth-Token\": token\n    };\n    axios.get(url, {\n      headers: apiToken\n    }).then(res => {\n      dispacth(setTicketList(res.data));\n    }).catch(error => {\n      console.log(error);\n      error.response !== undefined && dispacth(TicketListFail(error.response.data));\n    });\n  };\n};","map":{"version":3,"sources":["/home/cherry-dev-04/user-ui/src/ApiCall/TicketListApi.js"],"names":["actionTypes","BASE_PATH","SERVICE_PATH","axios","Pagination","queryString","getTicketList","TicketList","type","GET_TICKET_LIST","setTicketList","SET_TICKET_LIST","TicketListFail","error","TICKET_LIST_FAIL","TicketListApi","location","Page","query","parse","from","to","token","localStorage","getItem","url","state","dispacth","apiToken","get","headers","then","res","data","catch","console","log","response","undefined","TicketListRefreshApi"],"mappings":"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","sourcesContent":["import * as actionTypes from \"../actions/TicketListActions\";\nimport { BASE_PATH, SERVICE_PATH } from \"../ApiBasePath/ApiBasePath\";\nimport axios from \"axios\";\nimport { Pagination } from \"../helpers/Pagination\";\nimport queryString from \"query-string\";\nexport const getTicketList = TicketList => {\n  return {\n    type: actionTypes.GET_TICKET_LIST\n  };\n};\nexport const setTicketList = TicketList => {\n  return {\n    type: actionTypes.SET_TICKET_LIST,\n    TicketList: TicketList\n  };\n};\nexport const TicketListFail = error => {\n  return {\n    type: actionTypes.TICKET_LIST_FAIL,\n    error: error\n  };\n};\n\nexport const TicketListApi = location => {\n  const Page = Pagination(location);\n  const query = queryString.parse(location);\n  const from = Page.from;\n  const to = Page.to;\n  const token = localStorage.getItem(\"X-Auth-Token\");\n  const url = `${BASE_PATH}${SERVICE_PATH}/requests/1?state=${\n    query.state\n  }&from=${from || 0}&to=${to ||\n    10}&originated=false&order=desc&sortBy=UPDATE-TIME`;\n  return dispacth => {\n    const apiToken = token !== null && { \"X-Auth-Token\": token };\n\n    dispacth(getTicketList());\n    axios\n      .get(url, { headers: apiToken })\n      .then(res => {\n        dispacth(setTicketList(res.data));\n      })\n      .catch(error => {\n        console.log(error);\n        error.response !== undefined &&\n          dispacth(TicketListFail(error.response.data));\n      });\n  };\n};\n\nexport const TicketListRefreshApi = location => {\n  const Page = Pagination(location);\n  const query = queryString.parse(location);\n  const from = Page.from;\n  const to = Page.to;\n  const token = localStorage.getItem(\"X-Auth-Token\");\n  const url = `${BASE_PATH}${SERVICE_PATH}/requests/1?state=${\n    query.state\n  }&from=${from || 0}&to=${to ||\n    10}&originated=false&order=desc&sortBy=UPDATE-TIME`;\n  return dispacth => {\n    const apiToken = token !== null && { \"X-Auth-Token\": token };\n    axios\n      .get(url, { headers: apiToken })\n      .then(res => {\n        dispacth(setTicketList(res.data));\n      })\n      .catch(error => {\n        console.log(error);\n        error.response !== undefined &&\n          dispacth(TicketListFail(error.response.data));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}