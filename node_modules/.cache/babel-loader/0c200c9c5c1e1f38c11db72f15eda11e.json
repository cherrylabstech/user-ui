{"ast":null,"code":"import * as actionTypes from \"../actions/KnowledgeBaseActions\";\nimport { BASE_PATH, SERVICE_PATH } from \"../ApiBasePath/ApiBasePath\";\nimport axios from \"axios\";\nexport const getKnowledgeBase = KnowledgeBaseData => {\n  return {\n    type: actionTypes.GET_KNOWLEDGE_BASE_TOPIC\n  };\n};\nexport const setKnowledgeBase = KnowledgeBaseData => {\n  return {\n    type: actionTypes.SET_KNOWLEDGE_BASE_TOPIC,\n    KnowledgeBaseData: KnowledgeBaseData\n  };\n};\nexport const KnowledgeBaseFail = error => {\n  return {\n    type: actionTypes.KNOWLEDGE_BASE_TOPIC_FAIL,\n    error: error\n  };\n};\nexport function eg(data) {\n  console.log(data);\n}\nexport const KnowledgeBaseApi = () => {\n  const token = localStorage.getItem(\"X-Auth-Token\");\n  const url = `${BASE_PATH}${SERVICE_PATH}/kb/topic`;\n  return dispacth => {\n    const apiToken = token !== null && {\n      \"X-Auth-Token\": token\n    };\n    dispacth(getKnowledgeBase());\n    axios.get(url, {\n      headers: apiToken\n    }).then(res => {\n      res.data.map(data => eg(data));\n      res.data.map(data => console.log(data.id));\n      dispacth(setKnowledgeBase(res.data));\n    }).catch(error => {\n      console.log(error);\n      error.response !== undefined && dispacth(KnowledgeBaseFail(error.response.data));\n    });\n  };\n};","map":{"version":3,"sources":["/home/cherry-dev-04/user-ui/src/ApiCall/KnowledgeBaseApi.js"],"names":["actionTypes","BASE_PATH","SERVICE_PATH","axios","getKnowledgeBase","KnowledgeBaseData","type","GET_KNOWLEDGE_BASE_TOPIC","setKnowledgeBase","SET_KNOWLEDGE_BASE_TOPIC","KnowledgeBaseFail","error","KNOWLEDGE_BASE_TOPIC_FAIL","eg","data","console","log","KnowledgeBaseApi","token","localStorage","getItem","url","dispacth","apiToken","get","headers","then","res","map","id","catch","response","undefined"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,iCAA7B;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,4BAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,gBAAgB,GAAGC,iBAAiB,IAAI;AACnD,SAAO;AACLC,IAAAA,IAAI,EAAEN,WAAW,CAACO;AADb,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMC,gBAAgB,GAAGH,iBAAiB,IAAI;AACnD,SAAO;AACLC,IAAAA,IAAI,EAAEN,WAAW,CAACS,wBADb;AAELJ,IAAAA,iBAAiB,EAAEA;AAFd,GAAP;AAID,CALM;AAMP,OAAO,MAAMK,iBAAiB,GAAGC,KAAK,IAAI;AACxC,SAAO;AACLL,IAAAA,IAAI,EAAEN,WAAW,CAACY,yBADb;AAELD,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAMP,OAAO,SAASE,EAAT,CAAYC,IAAZ,EAAkB;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD;AACD,OAAO,MAAMG,gBAAgB,GAAG,MAAM;AACpC,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AACA,QAAMC,GAAG,GAAI,GAAEpB,SAAU,GAAEC,YAAa,WAAxC;AACA,SAAOoB,QAAQ,IAAI;AACjB,UAAMC,QAAQ,GAAGL,KAAK,KAAK,IAAV,IAAkB;AAAE,sBAAgBA;AAAlB,KAAnC;AAEAI,IAAAA,QAAQ,CAAClB,gBAAgB,EAAjB,CAAR;AACAD,IAAAA,KAAK,CACFqB,GADH,CACOH,GADP,EACY;AAAEI,MAAAA,OAAO,EAAEF;AAAX,KADZ,EAEGG,IAFH,CAEQC,GAAG,IAAI;AACXA,MAAAA,GAAG,CAACb,IAAJ,CAASc,GAAT,CAAad,IAAI,IAAID,EAAE,CAACC,IAAD,CAAvB;AACAa,MAAAA,GAAG,CAACb,IAAJ,CAASc,GAAT,CAAad,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACe,EAAjB,CAArB;AACAP,MAAAA,QAAQ,CAACd,gBAAgB,CAACmB,GAAG,CAACb,IAAL,CAAjB,CAAR;AACD,KANH,EAOGgB,KAPH,CAOSnB,KAAK,IAAI;AACdI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAA,MAAAA,KAAK,CAACoB,QAAN,KAAmBC,SAAnB,IACEV,QAAQ,CAACZ,iBAAiB,CAACC,KAAK,CAACoB,QAAN,CAAejB,IAAhB,CAAlB,CADV;AAED,KAXH;AAYD,GAhBD;AAiBD,CApBM","sourcesContent":["import * as actionTypes from \"../actions/KnowledgeBaseActions\";\nimport { BASE_PATH, SERVICE_PATH } from \"../ApiBasePath/ApiBasePath\";\nimport axios from \"axios\";\nexport const getKnowledgeBase = KnowledgeBaseData => {\n  return {\n    type: actionTypes.GET_KNOWLEDGE_BASE_TOPIC\n  };\n};\nexport const setKnowledgeBase = KnowledgeBaseData => {\n  return {\n    type: actionTypes.SET_KNOWLEDGE_BASE_TOPIC,\n    KnowledgeBaseData: KnowledgeBaseData\n  };\n};\nexport const KnowledgeBaseFail = error => {\n  return {\n    type: actionTypes.KNOWLEDGE_BASE_TOPIC_FAIL,\n    error: error\n  };\n};\nexport function eg(data) {\n  console.log(data);\n}\nexport const KnowledgeBaseApi = () => {\n  const token = localStorage.getItem(\"X-Auth-Token\");\n  const url = `${BASE_PATH}${SERVICE_PATH}/kb/topic`;\n  return dispacth => {\n    const apiToken = token !== null && { \"X-Auth-Token\": token };\n\n    dispacth(getKnowledgeBase());\n    axios\n      .get(url, { headers: apiToken })\n      .then(res => {\n        res.data.map(data => eg(data));\n        res.data.map(data => console.log(data.id));\n        dispacth(setKnowledgeBase(res.data));\n      })\n      .catch(error => {\n        console.log(error);\n        error.response !== undefined &&\n          dispacth(KnowledgeBaseFail(error.response.data));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}