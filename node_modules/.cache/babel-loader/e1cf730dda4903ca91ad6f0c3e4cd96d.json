{"ast":null,"code":"var _jsxFileName = \"/home/cherry-dev-04/user-ui/src/ReduxContainers/KnowledgeBase.js\";\nimport React, { Fragment, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userActions } from \"../ApiCall/rootApi\";\n\nfunction KnowledgeBase(props) {\n  const dispatch = useDispatch();\n  const kbData = useSelector(state => state.KnowledgeBaseReducer.KnowledgeBaseData); // const articlesData = useSelector(\n  //   state => state.KnowledgeBaseArticleReducer.KnowledgeBaseArticleData\n  // );\n  // const articlesDataLoading = useSelector(\n  //   state => state.KnowledgeBaseReducer.loading\n  // );\n\n  const topicsData = useSelector(state => state.KnowledgeBaseTopicsReducer.KnowledgeBaseTopicsData); //const topicsDataLoading = useSelector(state => state.KnowledgeBaseTopicsReducer.loading);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"X-Auth-Token\");\n\n    const tokenApiCalls = () => {\n      dispatch(userActions.KnowledgeBaseArticleApi(422)); // dispatch(userActions.KnowledgeBaseTopicsApi(81));\n\n      dispatch(userActions.KnowledgeBaseApi());\n    };\n\n    token && tokenApiCalls();\n    return function cleanUp() {\n      console.log(\"s`\");\n    };\n  }, [dispatch]);\n  useEffect(() => {\n    const kbArray = [{\n      id: 82\n    }, {\n      id: 81\n    }];\n    console.log();\n    kbData !== undefined && kbArray.map(data => dispatch(userActions.KnowledgeBaseTopicsApi(data.id, kbArray.length)));\n  }, [kbData]);\n  console.log(topicsData);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Knowledge Base\"));\n}\n\nexport default withRouter(KnowledgeBase);","map":{"version":3,"sources":["/home/cherry-dev-04/user-ui/src/ReduxContainers/KnowledgeBase.js"],"names":["React","Fragment","useEffect","withRouter","useDispatch","useSelector","userActions","KnowledgeBase","props","dispatch","kbData","state","KnowledgeBaseReducer","KnowledgeBaseData","topicsData","KnowledgeBaseTopicsReducer","KnowledgeBaseTopicsData","token","localStorage","getItem","tokenApiCalls","KnowledgeBaseArticleApi","KnowledgeBaseApi","cleanUp","console","log","kbArray","id","undefined","map","data","KnowledgeBaseTopicsApi","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,oBAA5B;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,MAAM,GAAGL,WAAW,CACxBM,KAAK,IAAIA,KAAK,CAACC,oBAAN,CAA2BC,iBADZ,CAA1B,CAF4B,CAK5B;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMC,UAAU,GAAGT,WAAW,CAC5BM,KAAK,IAAIA,KAAK,CAACI,0BAAN,CAAiCC,uBADd,CAA9B,CAX4B,CAc5B;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;;AACA,UAAMC,aAAa,GAAG,MAAM;AAC1BX,MAAAA,QAAQ,CAACH,WAAW,CAACe,uBAAZ,CAAoC,GAApC,CAAD,CAAR,CAD0B,CAE1B;;AACAZ,MAAAA,QAAQ,CAACH,WAAW,CAACgB,gBAAZ,EAAD,CAAR;AACD,KAJD;;AAKAL,IAAAA,KAAK,IAAIG,aAAa,EAAtB;AACA,WAAO,SAASG,OAAT,GAAmB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,KAFD;AAGD,GAXQ,EAWN,CAAChB,QAAD,CAXM,CAAT;AAaAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,OAAO,GAAG,CAAC;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAD,EAAa;AAAEA,MAAAA,EAAE,EAAE;AAAN,KAAb,CAAhB;AACAH,IAAAA,OAAO,CAACC,GAAR;AACAf,IAAAA,MAAM,KAAKkB,SAAX,IACEF,OAAO,CAACG,GAAR,CAAYC,IAAI,IACdrB,QAAQ,CAACH,WAAW,CAACyB,sBAAZ,CAAmCD,IAAI,CAACH,EAAxC,EAA4CD,OAAO,CAACM,MAApD,CAAD,CADV,CADF;AAID,GAPQ,EAON,CAACtB,MAAD,CAPM,CAAT;AAQAc,EAAAA,OAAO,CAACC,GAAR,CAAYX,UAAZ;AAEA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF;AAKD;;AACD,eAAeX,UAAU,CAACI,aAAD,CAAzB","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userActions } from \"../ApiCall/rootApi\";\n\nfunction KnowledgeBase(props) {\n  const dispatch = useDispatch();\n  const kbData = useSelector(\n    state => state.KnowledgeBaseReducer.KnowledgeBaseData\n  );\n  // const articlesData = useSelector(\n  //   state => state.KnowledgeBaseArticleReducer.KnowledgeBaseArticleData\n  // );\n  // const articlesDataLoading = useSelector(\n  //   state => state.KnowledgeBaseReducer.loading\n  // );\n  const topicsData = useSelector(\n    state => state.KnowledgeBaseTopicsReducer.KnowledgeBaseTopicsData\n  );\n  //const topicsDataLoading = useSelector(state => state.KnowledgeBaseTopicsReducer.loading);\n  useEffect(() => {\n    const token = localStorage.getItem(\"X-Auth-Token\");\n    const tokenApiCalls = () => {\n      dispatch(userActions.KnowledgeBaseArticleApi(422));\n      // dispatch(userActions.KnowledgeBaseTopicsApi(81));\n      dispatch(userActions.KnowledgeBaseApi());\n    };\n    token && tokenApiCalls();\n    return function cleanUp() {\n      console.log(\"s`\");\n    };\n  }, [dispatch]);\n\n  useEffect(() => {\n    const kbArray = [{ id: 82 }, { id: 81 }];\n    console.log();\n    kbData !== undefined &&\n      kbArray.map(data =>\n        dispatch(userActions.KnowledgeBaseTopicsApi(data.id, kbArray.length))\n      );\n  }, [kbData]);\n  console.log(topicsData);\n\n  return (\n    <Fragment>\n      <div className=\"main\">Knowledge Base</div>\n    </Fragment>\n  );\n}\nexport default withRouter(KnowledgeBase);\n"]},"metadata":{},"sourceType":"module"}